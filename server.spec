# -*- mode: python ; coding: utf-8 -*-
import os
import sys
from pathlib import Path

# Add the current directory to the Python path
sys.path.insert(0, str(Path.cwd()))

block_cipher = None

a = Analysis(
    ['back/server.py'],
    pathex=[],
    binaries=[],
    datas=[],
    hiddenimports=[
        'uvicorn',
        'uvicorn.lifespan',
        'uvicorn.lifespan.on',
        'uvicorn.lifespan.off',
        'uvicorn.protocols',
        'uvicorn.protocols.http',
        'uvicorn.protocols.websockets',
        'uvicorn.loops',
        'uvicorn.loops.auto',
        'uvicorn.server',
        'fastapi',
        'fastapi.routing',
        'fastapi.middleware',
        'fastapi.middleware.cors',
        'starlette',
        'starlette.middleware',
        'starlette.middleware.base',
        'starlette.middleware.cors',
        'starlette.routing',
        'starlette.responses',
        'starlette.applications',
        'pydantic',
        'pydantic.json',
        'pydantic._internal',
        'pydantic._internal._validators',
        'pydantic._internal._generate_schema',
        'pydantic._internal._config',
        'pydantic.networks',
        'pydantic.types',
        'pydantic.dataclasses',
        'anyio',
        'anyio._backends',
        'anyio._backends._asyncio',
        'sniffio',
        'h11',
        'h11._util',
        'httptools',
        'httptools.parser',
        'httptools.parser.errors',
        'back.api',
        'back.text_extraction',
        'back.pattern_detection',
        'back.fill_processor',
        'back.context_extractor',
        'back.checkbox_processor',
        'back.llm_client',
        'back.prompts',
        'back.text_utils',
        'back.font_manager',
        'back.pdf_filler',
        'back.docx_filler',
        'back.form_filler',
        'back.advanced_form_filler',
        'groq',
        'openai',
        'cv2',
        'easyocr',
        'PIL',
        'PIL.Image',
        'PIL.ImageDraw',
        'PIL.ImageFont',
        'numpy',
        'pandas',
        'pdf2image',
        'pdfplumber',
        'pdfminer',
        'pdfminer.six',
        'pymupdf',
        'fitz',
        'pypdf',
        'docx',
        'python_docx',
        'openpyxl',
        'xlsxwriter',
        'pytesseract',
        'transformers',
        'torch',
        'torchvision',
        'tokenizers',
        'huggingface_hub',
        'requests',
        'urllib3',
        'json',
        'jsonlines',
        'jsonref',
        'jsonschema',
        'yaml',
        'pyyaml',
        'lxml',
        'lxml.etree',
        'lxml.html',
        'bs4',
        'beautifulsoup4',
        'scipy',
        'scikit-image',
        'skimage',
        'imageio',
        'networkx',
        'shapely',
        'rtree',
        'pygments',
        'markdown_it_py',
        'rich',
        'typer',
        'click',
        'tqdm',
        'tabulate',
        'jinja2',
        'markupsafe',
        'regex',
        'multiprocess',
        'dill',
        'mpire',
        'filetype',
        'fsspec',
        'filelock',
        'distro',
        'attrs',
        'annotated_types',
        'typing_extensions',
        'typing_inspection',
        'pydantic_core',
        'pydantic_settings',
        'certifi',
        'charset_normalizer',
        'idna',
        'cryptography',
        'cffi',
        'pycparser',
        'packaging',
        'setuptools',
        'six',
        'python_dateutil',
        'pytz',
        'tzdata',
        'mpmath',
        'sympy',
        'lazy_loader',
        'tifffile',
        'safetensors',
        'semchunk',
        'shellingham',
        'soupsieve',
        'rpds_py',
        'referencing',
        'jsonschema_specifications',
        'latex2mathml',
        'mdurl',
        'marko',
        'jiter',
        'httpx',
        'httpcore',
        'hf_xet',
        'et_xmlfile',
        'docling',
        'docling_core',
        'docling_ibm_models',
        'docling_parse',
        'python_bidi',
        'pylatexenc',
        'pypdfium2',
        'pyclipper',
        'pluggy',
        'macholib',
        'altgraph',
        'python_dotenv',
        'python_pptx',
        'watchfiles',
        'websockets',
        'uvloop',
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='server',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=True,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
)